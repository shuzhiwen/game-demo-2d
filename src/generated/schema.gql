type AuthInfo {
  token: String!
  userId: String!
}

input ChannelInput {
  channelId: String!
  userId: String!
}

"""
Date custom scalar type
"""
scalar Date

input IdInput {
  id: String!
}

type Image {
  name: String!
  url: String!
}

"""
JSON custom scalar type
"""
scalar JSON

type Mutation {
  enterChannel(input: ChannelInput!): Boolean!
  exitChannel(input: ChannelInput!): Boolean!
  loginByEmail(email: String!, password: String!): AuthInfo!
  logonByEmail(email: String!, password: String!, verificationCode: String!): AuthInfo!
  resetPasswordByEmail(email: String!, password: String!, verificationCode: String!): Boolean!
  sayHello(hello: String): Boolean!
  sendData(input: SendDataInput!): Boolean!
  sendEmailVerificationCode(email: String!): Boolean
}

type Query {
  hello: String!
  transportHistory(channelId: String!, limit: Int, offset: Int): [Transport!]
  transportUsers(channelId: String!): [String!]!
}

input SendDataInput {
  channelId: String!
  data: JSON!
  seq: Int!
  serialize: Boolean
  userId: String!
}

type Subscription {
  helloWs: String!
  receiveData(channelId: String!): Transport!
}

interface System {
  createTime: Date!
  updateTime: Date!
}

type Transport {
  data: JSON!
  seq: Int!
  userId: String!
}

"""
Void custom scalar type
"""
scalar Void
